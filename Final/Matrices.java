/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Final;

import java.awt.Dimension;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author CAT
 */
public class Matrices extends javax.swing.JFrame {

    public double funcion[][] = new double[4][3], det[] = new double[9], detx[] = new double[9], dety[] = new double[9], detz[] = new double[9];
    public double re, errorelativo, errorelativo1, errorelativo2, deci, error, refun1, refun2, refun3, x, y, z;
    public int i, j, conta = 1, ndecimales;

    /**
     * Creates new form Matrices
     */
    public Matrices() {
        initComponents();
        this.setTitle("Metodo de Cramer");
        this.setMaximumSize(new Dimension(461, 585));
        this.setMinimumSize(new Dimension(461, 585));
        jTcuadro.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTres2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTerror = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTy2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTz2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTx = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTy = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTz = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTres = new javax.swing.JTextField();
        jTx1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTy1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTz1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTres1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTx2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTndecimales = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTcuadro = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel1.setText("=");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(300, 130, 20, 30);

        jTres2.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTres2.setText("0");
        jPanel1.add(jTres2);
        jTres2.setBounds(310, 130, 60, 30);

        jLabel2.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel2.setText("% error:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(370, 170, 100, 30);

        jTerror.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTerror.setText("0");
        jPanel1.add(jTerror);
        jTerror.setBounds(270, 210, 140, 30);

        jLabel3.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel3.setText("X");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(120, 130, 10, 30);

        jTy2.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTy2.setText("0");
        jPanel1.add(jTy2);
        jTy2.setBounds(140, 130, 60, 30);

        jLabel4.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel4.setText("Y");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(200, 130, 10, 30);

        jTz2.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTz2.setText("0");
        jPanel1.add(jTz2);
        jTz2.setBounds(220, 130, 60, 30);

        jLabel5.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel5.setText("Z");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(280, 130, 20, 30);

        jTx.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTx.setText("0");
        jPanel1.add(jTx);
        jTx.setBounds(60, 50, 60, 30);

        jLabel6.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel6.setText("X");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(120, 50, 10, 30);

        jTy.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTy.setText("0");
        jPanel1.add(jTy);
        jTy.setBounds(140, 50, 60, 30);

        jLabel7.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel7.setText("Y");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(200, 50, 10, 30);

        jTz.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTz.setText("0");
        jTz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTzActionPerformed(evt);
            }
        });
        jPanel1.add(jTz);
        jTz.setBounds(220, 50, 60, 30);

        jLabel8.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel8.setText("Z");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(280, 50, 20, 30);

        jLabel9.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel9.setText("=");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(300, 50, 20, 30);

        jTres.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTres.setText("0");
        jPanel1.add(jTres);
        jTres.setBounds(310, 50, 60, 30);

        jTx1.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTx1.setText("0");
        jPanel1.add(jTx1);
        jTx1.setBounds(60, 90, 60, 30);

        jLabel10.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel10.setText("X");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(120, 90, 10, 30);

        jTy1.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTy1.setText("0");
        jPanel1.add(jTy1);
        jTy1.setBounds(140, 90, 60, 30);

        jLabel11.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel11.setText("Y");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(200, 90, 10, 30);

        jTz1.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTz1.setText("0");
        jPanel1.add(jTz1);
        jTz1.setBounds(220, 90, 60, 30);

        jLabel12.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel12.setText("Z");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(280, 90, 20, 30);

        jLabel13.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel13.setText("=");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(300, 90, 20, 30);

        jTres1.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTres1.setText("0");
        jPanel1.add(jTres1);
        jTres1.setBounds(310, 90, 60, 30);

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 120)); // NOI18N
        jLabel14.setText("[");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(20, 20, 40, 140);

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 120)); // NOI18N
        jLabel15.setText("]");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(380, 20, 40, 140);

        jLabel16.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel16.setText("Funciones:");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(10, 10, 80, 30);

        jTx2.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTx2.setText("0");
        jPanel1.add(jTx2);
        jTx2.setBounds(60, 130, 60, 30);

        jLabel17.setFont(new java.awt.Font("Dubai Light", 1, 15)); // NOI18N
        jLabel17.setText("NÂ° decimales:");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(10, 170, 100, 30);

        jTndecimales.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        jTndecimales.setText("0");
        jPanel1.add(jTndecimales);
        jTndecimales.setBounds(20, 210, 140, 30);

        jButton1.setFont(new java.awt.Font("Dubai Light", 0, 15)); // NOI18N
        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(310, 500, 100, 30);

        jButton2.setFont(new java.awt.Font("Dubai Light", 0, 15)); // NOI18N
        jButton2.setText("Ejecutar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(30, 500, 100, 30);

        jTcuadro.setColumns(20);
        jTcuadro.setFont(new java.awt.Font("Dubai Light", 1, 14)); // NOI18N
        jTcuadro.setRows(5);
        jScrollPane2.setViewportView(jTcuadro);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 270, 390, 210);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Final/weather-2400074_1280.jpg"))); // NOI18N
        jLabel18.setText("jLabel18");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(0, -10, 450, 570);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jTx.getText().trim().equals("")) {///////////////////////////////////////X///////////////////////////////
            JOptionPane.showMessageDialog(null, "x de la primera funcion se encuentra vacia");
        } else {
            try {
                funcion[0][0] = Double.parseDouble(jTx.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en la x");
            }
        }
        if (jTx1.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "x de la segunda funcion se encuentra vacia");
        } else {
            try {
                funcion[0][1] = Double.parseDouble(jTx1.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en la x");
            }
        }
        if (jTx2.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "x de la tercera funcion se encuentra vacia");
        } else {
            try {
                funcion[0][2] = Double.parseDouble(jTx2.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en la x");
            }
        }
        if (jTy.getText().trim().equals("")) {///////////////////////////////////////Y///////////////////////////////
            JOptionPane.showMessageDialog(null, "y de la primera funcion se encuentra vacia");
        } else {
            try {
                funcion[1][0] = Double.parseDouble(jTy.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en la y");
            }
        }
        if (jTy1.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "y de la segunda funcion se encuentra vacia");
        } else {
            try {
                funcion[1][1] = Double.parseDouble(jTy1.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en la y");
            }
        }
        if (jTy2.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "y de la tercera funcion se encuentra vacia");
        } else {
            try {
                funcion[1][2] = Double.parseDouble(jTy2.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en la y");
            }
        }
        if (jTz.getText().trim().equals("")) {///////////////////////////////////////Z///////////////////////////////
            JOptionPane.showMessageDialog(null, "z de la primera funcion se encuentra vacia");
        } else {
            try {
                funcion[2][0] = Double.parseDouble(jTz.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en la z");
            }
        }
        if (jTz1.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "z de la segunda funcion se encuentra vacia");
        } else {
            try {
                funcion[2][1] = Double.parseDouble(jTz1.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en la z");
            }
        }
        if (jTz2.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "z de la tercera funcion se encuentra vacia");
        } else {
            try {
                funcion[2][2] = Double.parseDouble(jTz2.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en la z");
            }
        }
        if (jTres.getText().trim().equals("")) {///////////////////////////////////////RES///////////////////////////////
            JOptionPane.showMessageDialog(null, "resultado de la primera funcion se encuentra vacia");
        } else {
            try {
                funcion[3][0] = Double.parseDouble(jTres.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en el resultado");
            }
        }
        if (jTres1.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "resultado de la segunda funcion se encuentra vacia");
        } else {
            try {
                funcion[3][1] = Double.parseDouble(jTres1.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en el resultado");
            }
        }
        if (jTres2.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "resultado de la tercera funcion se encuentra vacia");
        } else {
            try {
                funcion[3][2] = Double.parseDouble(jTres2.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en la resultado");
            }
        }
        if (jTerror.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Cuadro de texto del error se encuentra vacio");
        } else {
            try {
                error = Double.parseDouble(jTerror.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en el error");
            }
        }
        if (jTndecimales.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "EL cuadro de texto de los decimales se encuentra vacio");
        } else {
            try {
                ndecimales = Integer.parseInt(jTndecimales.getText());//string a double
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros enteros en el numero de decimales");
            }
        }

        det[0] = +(funcion[0][0] * funcion[1][1] * funcion[2][2]);/////////////////////determinante
        det[1] = +(funcion[0][1] * funcion[1][2] * funcion[2][0]);
        det[2] = +(funcion[0][2] * funcion[1][0] * funcion[2][1]);
        det[3] = +det[0] + det[1] + det[2];
        det[4] = -(funcion[2][0] * funcion[1][1] * funcion[0][2]);
        det[5] = -(funcion[1][0] * funcion[0][1] * funcion[2][2]);
        det[6] = -(funcion[2][1] * funcion[1][2] * funcion[0][0]);
        det[7] = det[4] + det[5] + det[6];
        det[8] = det[3] + det[7];
        System.out.println("determinante " + det[8]);
        detx[0] = +(funcion[3][0] * funcion[1][1] * funcion[2][2]);/////////////////////determinante x
        detx[1] = +(funcion[3][1] * funcion[1][2] * funcion[2][0]);
        detx[2] = +(funcion[3][2] * funcion[1][0] * funcion[2][1]);
        detx[3] = detx[0] + detx[1] + detx[2];
        detx[4] = -(funcion[2][0] * funcion[1][1] * funcion[3][2]);
        detx[5] = -(funcion[1][0] * funcion[3][1] * funcion[2][2]);
        detx[6] = -(funcion[2][1] * funcion[1][2] * funcion[3][0]);
        detx[7] = detx[4] + detx[5] + detx[6];
        detx[8] = (detx[3] + detx[7]) / det[8];
        System.out.println("Determinante x " + detx[8]);
        dety[0] = +(funcion[0][0] * funcion[3][1] * funcion[2][2]);/////////////////////determinante y
        dety[1] = +(funcion[0][1] * funcion[3][2] * funcion[2][0]);
        dety[2] = +(funcion[0][2] * funcion[3][0] * funcion[2][1]);
        dety[3] = dety[0] + dety[1] + dety[2];
        dety[4] = -(funcion[2][0] * funcion[3][1] * funcion[0][2]);
        dety[5] = -(funcion[3][0] * funcion[0][1] * funcion[2][2]);
        dety[6] = -(funcion[2][1] * funcion[3][2] * funcion[0][0]);
        dety[7] = dety[4] + dety[5] + dety[6];
        dety[8] = (dety[3] + dety[7]) / det[8];
        System.out.println("Determinante y " + dety[8]);
        detz[0] = +(funcion[0][0] * funcion[1][1] * funcion[3][2]);/////////////////////determinante y
        detz[1] = +(funcion[0][1] * funcion[1][2] * funcion[3][0]);
        detz[2] = +(funcion[0][2] * funcion[1][0] * funcion[3][1]);
        detz[3] = detz[0] + detz[1] + detz[2];
        detz[4] = -(funcion[3][0] * funcion[1][1] * funcion[0][2]);
        detz[5] = -(funcion[1][0] * funcion[0][1] * funcion[3][2]);
        detz[6] = -(funcion[3][1] * funcion[1][2] * funcion[0][0]);
        detz[7] = detz[4] + detz[5] + detz[6];
        detz[8] = (detz[3] + detz[7]) / det[8];
        System.out.println("Determinante z " + detz[8]);
        BigDecimal dete = new BigDecimal(det[8]);
        dete = dete.setScale(ndecimales, RoundingMode.HALF_UP);
        BigDecimal detex = new BigDecimal(detx[8]);
        detex = detex.setScale(ndecimales, RoundingMode.HALF_UP);
        BigDecimal detey = new BigDecimal(dety[8]);
        detey = detey.setScale(ndecimales, RoundingMode.HALF_UP);
        BigDecimal detez = new BigDecimal(detz[8]);
        detez = detez.setScale(ndecimales, RoundingMode.HALF_UP);
        double deee = dete.doubleValue();
        x = detex.doubleValue();
        y = detey.doubleValue();
        z = detez.doubleValue();
        System.out.println(dete);
        System.out.println(detex);
        System.out.println(detey);
        System.out.println(detez);

        refun1 = (funcion[0][0] * x) + (funcion[1][0] * y) + (funcion[2][0] * z);
        System.out.println("refun1 " + refun1);
        refun2 = (funcion[0][1] * y) + (funcion[1][1] * y) + (funcion[2][1] * z);
        System.out.println("refun2 " + refun2);
        refun3 = (funcion[0][2] * x) + (funcion[1][2] * y) + (funcion[2][2] * z);
        System.out.println("refun3 " + refun3);
        errorelativo = Math.abs((funcion[3][0] - refun1) / funcion[3][0]) * 100;
        System.out.println("error " + errorelativo);
        errorelativo = Math.abs((funcion[3][1] - refun2) / funcion[3][1]) * 100;
        System.out.println("error " + errorelativo1);
        errorelativo = Math.abs((funcion[3][2] - refun3) / refun1) * 100;
        System.out.println("error " + errorelativo2);
        BigDecimal uno = new BigDecimal(errorelativo);
        uno = uno.setScale(ndecimales, RoundingMode.HALF_UP);
        BigDecimal dos = new BigDecimal(errorelativo1);
        dos = dos.setScale(ndecimales, RoundingMode.HALF_UP);
        BigDecimal tres = new BigDecimal(errorelativo2);
        tres = tres.setScale(ndecimales, RoundingMode.HALF_UP);
        BigDecimal res = new BigDecimal(re);
        res = res.setScale(ndecimales, RoundingMode.HALF_UP);
        double ress = res.doubleValue();
        double po = uno.doubleValue();
        double ka = dos.doubleValue();
        double ca = tres.doubleValue();
        System.out.println(ress);
        ress = po + ka + ca / 3;
        System.out.println("error " + po);
        jTcuadro.append("Det         " + deee
                + "\nX=            " + x
                + "\nY=            " + y
                + "\nZ=             " + z
                + "\nEr1=          " + po
                + "\nEr2=          " + ka
                + "\nEr3=          " + ca
                + "\nPm=           " + res);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTx.setText("0");
        jTx1.setText("0");
        jTx2.setText("0");
        jTy.setText("0");
        jTy1.setText("0");
        jTy2.setText("0");
        jTz.setText("0");
        jTz1.setText("0");
        jTz2.setText("0");
        jTres.setText("0");
        jTres1.setText("0");
        jTres2.setText("0");
        jTcuadro.setText("");
        jTerror.setText("0");
        jTndecimales.setText("0");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTzActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTzActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Matrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Matrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Matrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Matrices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Matrices mat = new Matrices();
                mat.setVisible(true);
                mat.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTcuadro;
    private javax.swing.JTextField jTerror;
    private javax.swing.JTextField jTndecimales;
    private javax.swing.JTextField jTres;
    private javax.swing.JTextField jTres1;
    private javax.swing.JTextField jTres2;
    private javax.swing.JTextField jTx;
    private javax.swing.JTextField jTx1;
    private javax.swing.JTextField jTx2;
    private javax.swing.JTextField jTy;
    private javax.swing.JTextField jTy1;
    private javax.swing.JTextField jTy2;
    private javax.swing.JTextField jTz;
    private javax.swing.JTextField jTz1;
    private javax.swing.JTextField jTz2;
    // End of variables declaration//GEN-END:variables
}
